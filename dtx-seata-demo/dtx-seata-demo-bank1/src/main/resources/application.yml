spring:
  application:
    name: dtx-seata-demo-bank1
  datasource:
    url: ${SPRING_DATASOURCE_URL:jdbc:mysql://localhost:3306/test_one?useUnicode=true&characterEncoding=utf-8&useSSL=false}
    username: ${SPRING_DATASOURCE_USERNAME:root}
    password: ${SPRING_DATASOURCE_PASSWORD:tse@9527}
    driver-class-name: com.mysql.jdbc.Driver
    hikari:
      # 连接池最小空闲连接数
      minimum-idle: ${SPRING_DATASOURCE_MINIMUM_IDLE:20}
      # 连接池允许的最大连接数
      maximum-pool-size: ${SPRING_DATASOURCE_MAXIMUM_POOL_SIZE:200}
      # 等待连接池分配连接的最大时长（毫秒）
      connection-timeout: ${SPRING_DATASOURCE_CONNECTION_TIMEOUT:30000}
  servlet:
    multipart:
      # 是否支持多部分上传
      enabled: true
      # 最大支持文件上传的大小
      max-file-size: 10MB
      # 支持请求最大文件上传的大小
      max-request-size: 100MB
  mvc:
    dateFormat: yyyy-MM-dd HH:mm:ss
  jackson:
    dateFormat: yyyy-MM-dd HH:mm:ss
    timeZone: GMT+8
  cloud:
    alibaba:
      seata:
        tx-service-group: dtx-bank1-seata-service-group

server:
  undertow:
    # 设置IO线程数, 它主要执行非阻塞的任务,它们会负责多个连接
    # 默认值为8，建议设置每个CPU核心一个线程
    io-threads: ${SERVER_UNDERTOW_IO_THREADS:4}
    # 阻塞任务线程池, 当执行类似servlet请求阻塞操作, undertow会从这个线程池中取得线程
    # 默认等于 io-threads*8，它的值设置取决于系统的负载，可适当调大该值
    worker-threads: ${SERVER_UNDERTOW_WORKER_THREADS:128}
    # 每块buffer的空间大小，越小空间被利用越充分
    # 不要设置太大，以免影响其他应用，合适即可
    buffer-size: ${SERVER_UNDERTOW_BUFFER_SIZE:1024}
    # 是否分配的直接内存(NIO直接分配的堆外内存)
    # 默认false
    direct-buffers: true
    # HTTP POST请求最大的大小
    # 默认0，无限制，可设置10M
    max-http-post-size: 10485760

logging:
  level:
    org.apache.ibatis: ${LOG_LEVEL:debug}
    org.abigballofmud: ${LOG_LEVEL:debug}

mybatis-plus:
  mapper-locations: classpath*:/mapper/*.xml
  configuration:
    map-underscore-to-camel-case: true